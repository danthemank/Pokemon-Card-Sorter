; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "xxx"
#define MyAppVersion "0.8"
#define MyAppPublisher "My Company, Inc."
#define MyAppURL "https://www.example.com/"
#define MyAppExeName "MyProg.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{A0137F8A-FD8F-494D-97C6-F1931FC4F153}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}          
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
OutputBaseFilename=mysetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
UsePreviousAppDir=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "..\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "__pycache__\*, .git\*, .vscode\*, dist\*, env\*, env10\*, matchingScript\*, pokemonCardDocker\*, build\*, cardsDatabase\*"

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]

;Filename: "{app}\installer\python-3.9.0-amd64"; Parameters: "/quiet InstallAllUsers=0 PrependPath=0"; StatusMsg: "Installing Python..."
;Filename: "{app}\..\Python\Python39\Scripts\pip.exe"; Parameters: "install virtualenv"; Flags: shellexec
;Filename: "{app}\..\Python\Python39\Scripts\virtualenv.exe"; Parameters: "{app}\env"; Flags: shellexec

;Filename: "{app}\installer\python-3.9.0-amd64"; Parameters: "/quiet TargetDir={app}\python_bin InstallAllUsers=0 PrependPath=0"; StatusMsg: "Installing Python..."
;Filename: "{app}\python_bin\Python\Python39\Scripts\pip.exe"; Parameters: "install virtualenv"; Flags: shellexec
;Filename: "{app}\python_bin\Python\Python39\Scripts\virtualenv.exe"; Parameters: "{app}\env"; Flags: shellexec

Filename: "cmd"; Parameters: "/k {app}\env\Scripts\python.exe -m pip install -r {app}\requirements.txt"; WorkingDir: "{app}"; Flags: shellexec

Filename: "{app}\installer\python-3.9.0-amd64"; Parameters: "/quiet TargetDir={app}\python_bin InstallAllUsers=0 PrependPath=0"; StatusMsg: "Installing Python..."
Filename: "{app}\python_bin\Python\Python39\Scripts\pip.exe"; Parameters: "install virtualenv"; Flags: shellexec
Filename: "{app}\python_bin\Python\Python39\Scripts\virtualenv.exe"; Parameters: "{app}\env"; Flags: shellexec


;Filename: "{app}\env\Scripts\python.exe"; Parameters: "-m pip install -r {app}\requirements.txt"; Flags: shellexec

;Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

